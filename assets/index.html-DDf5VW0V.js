import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as l,d as n}from"./app-DbRsw7jK.js";const r={},p=n('<div class="hint-container tip"><p class="hint-container-title">✨✨✨✨✨</p></div><h2 id="什么是-opentelemetry" tabindex="-1"><a class="header-anchor" href="#什么是-opentelemetry"><span>什么是 OpenTelemetry？</span></a></h2><h3 id="简短说明-opentelemetry-是什么-不是什么。" tabindex="-1"><a class="header-anchor" href="#简短说明-opentelemetry-是什么-不是什么。"><span>简短说明 OpenTelemetry 是什么，不是什么。</span></a></h3><p>OpenTelemetry 是一个可观测性框架和工具包， 旨在创建和管理遥测数据，如链路、 指标和日志。 重要的是，OpenTelemetry 是供应商和工具无关的，这意味着它可以与各种可观测性后端一起使用， 包括 Jaeger 和 Prometheus 这类开源工具以及商业化产品。</p><p>OpenTelemetry 不是像 Jaeger、Prometheus 或其他商业供应商那样的可观测性后端。 OpenTelemetry 专注于遥测数据的生成、采集、管理和导出。 OpenTelemetry 的一个主要目标是， 无论应用程序或系统采用何种编程语言、基础设施或运行时环境，你都可以轻松地将其仪表化。 重要的是，遥测数据的存储和可视化是有意留给其他工具处理的。</p><h2 id="什么是可观测性" tabindex="-1"><a class="header-anchor" href="#什么是可观测性"><span>什么是可观测性？</span></a></h2><p>可观测性具备检查系统输出来理解系统内部状态的能力。 在软件的上下文中，这意味着通过检查遥测数据（包括链路、指标和日志）来理解系统的内部状态。</p><p>要使系统可观测，必须对其进行仪表化。也就是说，代码必须发出链路、指标或日志。 然后，仪表化的数据必须发送到可观测性后端。</p><h2 id="为什么选择-opentelemetry" tabindex="-1"><a class="header-anchor" href="#为什么选择-opentelemetry"><span>为什么选择 OpenTelemetry？</span></a></h2><p>随着云计算、微服务架构和日益复杂的业务需求的兴起，软件和基础设施的可观测性需求比以往任何时候都要强烈。</p><p>OpenTelemetry 满足可观测性的需求，并遵循两个关键原则：</p><ol><li>你所生成的数据归属于你自己，不会被供应商锁定。</li><li>你只需要学习一套 API 和约定。</li></ol><p>这两个原则的结合赋予团队和组织在当今现代计算世界中所需的灵活性。</p><p>如果你想了解更多信息，请查阅 OpenTelemetry 的使命、愿景和价值观。</p><h2 id="主要的-opentelemetry-组件" tabindex="-1"><a class="header-anchor" href="#主要的-opentelemetry-组件"><span>主要的 OpenTelemetry 组件</span></a></h2><p>OpenTelemetry 包括以下主要组件：</p><ul><li>适用于所有组件的规范</li><li>定义遥测数据形状的标准协议</li><li>为常见遥测数据类型定义标准命名方案的语义约定</li><li>定义如何生成遥测数据的 API</li><li>实现规范、API 和遥测数据导出的语言 SDK</li><li>实现常见库和框架的仪表化的库生态系统</li><li>可自动生成遥测数据的自动仪表化组件，无需更改代码</li><li>OpenTelemetry Collector：接收、处理和导出遥测数据的代理</li><li>各种其他工具， 如用于 Kubernetes 的 OpenTelemetry Operator、 OpenTelemetry Helm Charts 和 FaaS 的社区资产</li></ul><p>OpenTelemetry 广泛应用于许多已集成 OpenTelemetry 提供默认可观测性的库、服务和应用。</p><p>OpenTelemetry 得到众多供应商的支持，其中许多为 OpenTelemetry 提供商业支持并直接为此项目做贡献。</p><h2 id="可扩展性" tabindex="-1"><a class="header-anchor" href="#可扩展性"><span>可扩展性</span></a></h2><p>OpenTelemetry 被设计为可扩展的。一些扩展 OpenTelemetry 的例子包括：</p><ul><li>向 OpenTelemetry Collector 添加接收器以支持来自自定义源的遥测数据</li><li>将自定义仪表化库加载到 SDK 中</li><li>创建适用于特定用例的 SDK 或 Collector 的分发</li><li>为尚不支持 OpenTelemetry 协议（OTLP）的自定义后端创建新的导出器</li><li>为非标准上下文传播格式创建自定义传播器</li></ul><p>尽管大多数用户可能不需要扩展 OpenTelemetry，但此项目几乎每个层面都可以实现扩展。</p><h2 id="历史" tabindex="-1"><a class="header-anchor" href="#历史"><span>历史</span></a></h2><p>OpenTelemetry 是云原生计算基金会 (CNCF)的一个项目，是由 OpenTracing 和 OpenCensus 项目合并而诞生的。OpenTracing 和 OpenCensus 这两个项目合并而成的。原来这两个项目都是为解决同样的问题而创建的： 缺乏一种标准的方法来为代码进行仪表化并将遥测数据发送到可观测性后端。 由于这两个项目都无法独立解决这个问题，所以将其合并成立了 OpenTelemetry， 吸收了双方的优势，提供了统一的解决方案。</p>',25),i=[p];function a(o,m){return t(),l("div",null,i)}const d=e(r,[["render",a],["__file","index.html.vue"]]),y=JSON.parse('{"path":"/articles/distributed-middleware/opentelemetry/","title":"OpenTelemetry 简介","lang":"zh-CN","frontmatter":{"title":"OpenTelemetry 简介","date":"2024-07-04T00:00:00.000Z","dir":{"text":"OpenTelemetry","order":11},"category":["分布式中间件"],"description":"✨✨✨✨✨ 什么是 OpenTelemetry？ 简短说明 OpenTelemetry 是什么，不是什么。 OpenTelemetry 是一个可观测性框架和工具包， 旨在创建和管理遥测数据，如链路、 指标和日志。 重要的是，OpenTelemetry 是供应商和工具无关的，这意味着它可以与各种可观测性后端一起使用， 包括 Jaeger 和 Promet...","head":[["meta",{"property":"og:url","content":"http://blog.goodsxx.cn/articles/distributed-middleware/opentelemetry/"}],["meta",{"property":"og:site_name","content":"Growing Notes"}],["meta",{"property":"og:title","content":"OpenTelemetry 简介"}],["meta",{"property":"og:description","content":"✨✨✨✨✨ 什么是 OpenTelemetry？ 简短说明 OpenTelemetry 是什么，不是什么。 OpenTelemetry 是一个可观测性框架和工具包， 旨在创建和管理遥测数据，如链路、 指标和日志。 重要的是，OpenTelemetry 是供应商和工具无关的，这意味着它可以与各种可观测性后端一起使用， 包括 Jaeger 和 Promet..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-04T08:55:13.000Z"}],["meta",{"property":"article:author","content":"SongXinXin"}],["meta",{"property":"article:published_time","content":"2024-07-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-04T08:55:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenTelemetry 简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-04T08:55:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SongXinXin\\"}]}"]]},"headers":[{"level":2,"title":"什么是 OpenTelemetry？","slug":"什么是-opentelemetry","link":"#什么是-opentelemetry","children":[{"level":3,"title":"简短说明 OpenTelemetry 是什么，不是什么。","slug":"简短说明-opentelemetry-是什么-不是什么。","link":"#简短说明-opentelemetry-是什么-不是什么。","children":[]}]},{"level":2,"title":"什么是可观测性？","slug":"什么是可观测性","link":"#什么是可观测性","children":[]},{"level":2,"title":"为什么选择 OpenTelemetry？","slug":"为什么选择-opentelemetry","link":"#为什么选择-opentelemetry","children":[]},{"level":2,"title":"主要的 OpenTelemetry 组件","slug":"主要的-opentelemetry-组件","link":"#主要的-opentelemetry-组件","children":[]},{"level":2,"title":"可扩展性","slug":"可扩展性","link":"#可扩展性","children":[]},{"level":2,"title":"历史","slug":"历史","link":"#历史","children":[]}],"git":{"createdTime":1720083313000,"updatedTime":1720083313000,"contributors":[{"name":"SongXinXin","email":"1368084801@qq.com","commits":1}]},"readingTime":{"minutes":3.48,"words":1043},"filePathRelative":"articles/distributed-middleware/opentelemetry/README.md","localizedDate":"2024年7月4日","excerpt":"<!-- more -->\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">✨✨✨✨✨</p>\\n</div>\\n<h2>什么是 OpenTelemetry？</h2>\\n<h3>简短说明 OpenTelemetry 是什么，不是什么。</h3>\\n<p>OpenTelemetry 是一个可观测性框架和工具包， 旨在创建和管理遥测数据，如链路、 指标和日志。 重要的是，OpenTelemetry 是供应商和工具无关的，这意味着它可以与各种可观测性后端一起使用， 包括 Jaeger 和 Prometheus 这类开源工具以及商业化产品。</p>","autoDesc":true}');export{d as comp,y as data};
