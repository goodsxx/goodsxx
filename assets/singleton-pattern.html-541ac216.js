const t=JSON.parse('{"key":"v-4d05d9fd","path":"/columns/blog-posts/series/design-pattern/singleton-pattern.html","title":"单例模式","lang":"zh-CN","frontmatter":{"title":"单例模式","date":"2022-05-06T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","创建型模式"],"timeline":true,"order":1,"description":"✨✨✨✨✨ 单例模式（Singleton Pattern）是最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 它的目的是确保某个类只有一个实例，并提供一个全局的访问点。","head":[["meta",{"property":"og:url","content":"http://goodsxx.cn/columns/blog-posts/series/design-pattern/singleton-pattern.html"}],["meta",{"property":"og:site_name","content":"Growing Notes"}],["meta",{"property":"og:title","content":"单例模式"}],["meta",{"property":"og:description","content":"✨✨✨✨✨ 单例模式（Singleton Pattern）是最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 它的目的是确保某个类只有一个实例，并提供一个全局的访问点。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-22T08:29:33.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"创建型模式"}],["meta",{"property":"article:published_time","content":"2022-05-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-22T08:29:33.000Z"}]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]},{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]},{"level":2,"title":"优化","slug":"优化","link":"#优化","children":[]}],"git":{"createdTime":1671520332000,"updatedTime":1677054573000,"contributors":[{"name":"SongXinXin","email":"1368084801@qq.com","commits":3}]},"readingTime":{"minutes":2.93,"words":878},"filePathRelative":"columns/blog-posts/series/design-pattern/singleton-pattern.md","localizedDate":"2022年5月6日","excerpt":"<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">✨✨✨✨✨</p>\\n<p>单例模式（Singleton Pattern）是最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。\\n它的目的是确保某个类只有一个实例，并提供一个全局的访问点。</p>\\n</div>\\n","autoDesc":true}');export{t as data};
