import{_ as k,X as r,Y as d,Z as v,a0 as n,a1 as s,$ as o,a2 as a,a3 as i,F as l}from"./framework-83fdd257.js";const m="/assets/1673340537276-a0ccc326.png",b="/assets/1673415111491-a55a72ae.png",g="/assets/1673416575851-86fbebf3.png",y="/assets/1673416636402-1de485ba.png",w={},h=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"✨✨✨✨✨"),n("p",null,"混合开发的概念是相对与原生开发来说的：App 不直接运行原生程序，而是在原生程序中运行一个 Web 程序，原生程序中包含 Web 运行时，用于承载 Web 页面。暂且将原生应用称之为 Web 容器，Web 容器应该能让 JavaScript 代码与原生平台的代码交互，互相调用，同时为上层提供交互逻辑，例如导航，事件，Cookie，刷新等内容。"),n("p",null,"本章我们将讲解如何通过自定义 MAUI 中的 WebView 控件实现 MAUI + Web 混合开发。")],-1),f=n("h2",{id:"自定义-hybridwebview-控件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义-hybridwebview-控件","aria-hidden":"true"},"#"),s(" 自定义 HybridWebView 控件")],-1),q=n("p",null,"基于 WebView 使用处理程序创建自定义 HybridWebView 控件。",-1),V={href:"https://github.com/Eilon/MauiCSharpInteropWebView",target:"_blank",rel:"noopener noreferrer"},M=i('<h3 id="新建-net-maui-类库项目" tabindex="-1"><a class="header-anchor" href="#新建-net-maui-类库项目" aria-hidden="true">#</a> 新建 .NET MAUI 类库项目</h3><p>新建 .NET MAUI 类库项目，并命名为 MauiCSharpInteropWebView。</p><figure><img src="'+m+`" alt="新建名为 MauiCSharpInteropWebView 的 .NET MAUI 类库项目" tabindex="0" loading="lazy"><figcaption>新建名为 MauiCSharpInteropWebView 的 .NET MAUI 类库项目</figcaption></figure><h3 id="创建-hybridwebview-跨平台控件" tabindex="-1"><a class="header-anchor" href="#创建-hybridwebview-跨平台控件" aria-hidden="true">#</a> 创建 HybridWebView 跨平台控件</h3><p>HybridWebView 类作为跨平台控件需派生字自 WebView 类。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HybridWebView</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebView</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">WebView</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MainFile <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">///  包含web应用程序内容的应用程序“原始”资产资源中的路径。例如，如果文件位于“project folder/Resources/Raw/hybrid_root”中，则将该属性设置为“hybrid_root”</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> HybridAssetRoot <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// JavaScript方法调用的目标对象。当从JavaScript发送“invoke”消息时，被调用的方法将位于该对象上，并且任何指定的参数都将被传入。</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> JSInvokeTarget <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">EventHandler<span class="token punctuation">&lt;</span>HybridWebViewRawMessageReceivedEventArgs<span class="token punctuation">&gt;</span></span> RawMessageReceived<span class="token punctuation">;</span>

        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnHandlerChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnHandlerChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">InitializeHybridWebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">partial</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeHybridWebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 调用名为&lt; paramref name=&quot;methodName&quot;/&gt;的JavaScript方法，并通过对每个参数值进行JSON编码，选择性地传入由&lt; paramref name=&quot;paramValues&quot;/&gt;指定的参数值。</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>methodName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>要调用的JavaScript方法的名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>paramValues<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>通过对每个对象进行JSON编码，将对象的可选数组传递给JavaScript方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>包含被调用方法的返回值的字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">InvokeJsMethodAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> methodName<span class="token punctuation">,</span> <span class="token keyword">params</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> paramValues<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;The method name cannot be null or empty.&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">nameof</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">EvaluateJavaScriptAsync</span><span class="token punctuation">(</span>$&quot;<span class="token punctuation">{</span>methodName<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">(</span>paramValues <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty <span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">,</span> paramValues<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>v <span class="token operator">=&gt;</span> JsonSerializer<span class="token punctuation">.</span><span class="token function">Serialize</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 调用名为&lt; paramref name=&quot;methodName&quot;/&gt;的JavaScript方法，并通过对每个参数值进行JSON编码，选择性地传入由&lt; paramref name=&quot;paramValues&quot;/&gt;指定的参数值</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TReturnType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>要从JSON反序列化的返回值的类型<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>methodName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>要调用的JavaScript方法的名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>paramValues<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>通过对每个对象进行JSON编码，将对象的可选数组传递给JavaScript方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>包含被调用方法的返回值的&lt; typeparamref name = &quot; TReturnType &quot;/&gt;类型的对象<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TReturnType<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">InvokeJsMethodAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TReturnType<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> methodName<span class="token punctuation">,</span> <span class="token keyword">params</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> paramValues<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> stringResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">InvokeJsMethodAsync</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span> paramValues<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> JsonSerializer<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Deserialize</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TReturnType<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>stringResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnMessageReceived</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> messageData <span class="token operator">=</span> JsonSerializer<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Deserialize</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>WebMessageData<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>messageData<span class="token punctuation">.</span>MessageType<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment">// &quot;raw&quot; message (just a string)</span>
                    RawMessageReceived<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HybridWebViewRawMessageReceivedEventArgs</span><span class="token punctuation">(</span>messageData<span class="token punctuation">.</span>MessageContent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment">// &quot;invoke&quot; message</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> invokeData <span class="token operator">=</span> JsonSerializer<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Deserialize</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JSInvokeMethodData<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>messageData<span class="token punctuation">.</span>MessageContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">InvokeDotNetMethod</span><span class="token punctuation">(</span>invokeData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token punctuation">:</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;未知的消息类型: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">messageData<span class="token punctuation">.</span>MessageType</span><span class="token punctuation">}</span></span><span class="token string">. 消息内容: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">messageData<span class="token punctuation">.</span>MessageContent</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InvokeDotNetMethod</span><span class="token punctuation">(</span><span class="token class-name">JSInvokeMethodData</span> invokeData<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>JSInvokeTarget <span class="token keyword">is</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">nameof</span><span class="token punctuation">(</span>JSInvokeTarget<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">属性必须有一个值，以便从JavaScript调用.NET方法。&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name"><span class="token keyword">var</span></span> invokeMethod <span class="token operator">=</span> JSInvokeTarget<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetMethod</span><span class="token punctuation">(</span>invokeData<span class="token punctuation">.</span>MethodName<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>Public <span class="token operator">|</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>Static <span class="token operator">|</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>Instance <span class="token operator">|</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>InvokeMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>invokeData<span class="token punctuation">.</span>ParamValues <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> invokeMethod<span class="token punctuation">.</span><span class="token function">GetParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Length <span class="token operator">!=</span> invokeData<span class="token punctuation">.</span>ParamValues<span class="token punctuation">.</span>Length<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">nameof</span><span class="token punctuation">(</span>JSInvokeTarget<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">的方法</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invokeData<span class="token punctuation">.</span>MethodName</span><span class="token punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invokeMethod<span class="token punctuation">.</span><span class="token function">GetParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Length</span><span class="token punctuation">}</span></span><span class="token string">)上的参数数量与从JavaScript代码(</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invokeData<span class="token punctuation">.</span>ParamValues<span class="token punctuation">.</span>Length</span><span class="token punctuation">}</span></span><span class="token string">)传递的值的数量不匹配。&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name"><span class="token keyword">var</span></span> paramObjectValues <span class="token operator">=</span>
                invokeData<span class="token punctuation">.</span>ParamValues<span class="token punctuation">?</span>
                    <span class="token punctuation">.</span><span class="token function">Zip</span><span class="token punctuation">(</span>invokeMethod<span class="token punctuation">.</span><span class="token function">GetParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> JsonSerializer<span class="token punctuation">.</span><span class="token function">Deserialize</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> p<span class="token punctuation">.</span>ParameterType<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> returnValue <span class="token operator">=</span> invokeMethod<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>JSInvokeTarget<span class="token punctuation">,</span> paramObjectValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">JSInvokeMethodData</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MethodName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ParamValues <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">WebMessageData</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> MessageType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MessageContent <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetAssetContentAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> assetPath<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">GetAssetStreamAsync</span><span class="token punctuation">(</span>assetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stream <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> contents <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> contents<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Stream<span class="token punctuation">&gt;</span></span> <span class="token function">GetAssetStreamAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> assetPath<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">await</span> FileSystem<span class="token punctuation">.</span><span class="token function">AppPackageFileExistsAsync</span><span class="token punctuation">(</span>assetPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">await</span> FileSystem<span class="token punctuation">.</span><span class="token function">OpenAppPackageFileAsync</span><span class="token punctuation">(</span>assetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-hybridwebviewhandler-处理程序" tabindex="-1"><a class="header-anchor" href="#创建-hybridwebviewhandler-处理程序" aria-hidden="true">#</a> 创建 HybridWebViewHandler 处理程序</h3><p>HybridWebViewHandler 类作为 HybridWebView 控件的处理程序需派生自 WebViewHandler 处理程序。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Maui<span class="token punctuation">.</span>Handlers</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HybridWebView</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebViewHandler</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">WebViewHandler</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IPropertyMapper<span class="token punctuation">&lt;</span>IWebView<span class="token punctuation">,</span> IWebViewHandler<span class="token punctuation">&gt;</span></span> HybridWebViewMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyMapper<span class="token punctuation">&lt;</span>IWebView<span class="token punctuation">,</span> IWebViewHandler<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>WebViewHandler<span class="token punctuation">.</span>Mapper<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
<span class="token preprocessor property">#<span class="token directive keyword">if</span> __ANDROID__</span>
            <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Android<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span>WebViewClient<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> MapHybridWebViewClient<span class="token punctuation">,</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">HybridWebViewHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>HybridWebViewMapper<span class="token punctuation">,</span> CommandMapper<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token function">HybridWebViewHandler</span><span class="token punctuation">(</span><span class="token class-name">IPropertyMapper<span class="token punctuation">?</span></span> mapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">CommandMapper<span class="token punctuation">?</span></span> commandMapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>mapper <span class="token operator">??</span> HybridWebViewMapper<span class="token punctuation">,</span> commandMapper <span class="token operator">??</span> CommandMapper<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

<span class="token preprocessor property">#<span class="token directive keyword">if</span> ANDROID</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MapHybridWebViewClient</span><span class="token punctuation">(</span><span class="token class-name">IWebViewHandler</span> handler<span class="token punctuation">,</span> <span class="token class-name">IWebView</span> webView<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token keyword">is</span> <span class="token class-name">HybridWebViewHandler</span> platformHandler<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> webViewClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AndroidHybridWebViewClient</span><span class="token punctuation">(</span>platformHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
                handler<span class="token punctuation">.</span>PlatformView<span class="token punctuation">.</span><span class="token function">SetWebViewClient</span><span class="token punctuation">(</span>webViewClient<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// TODO: There doesn&#39;t seem to be a way to override MapWebViewClient() in maui/src/Core/src/Handlers/WebView/WebViewHandler.Android.cs</span>
                <span class="token comment">// in such a way that it knows of the custom MauiWebViewClient that we&#39;re creating. So, we use private reflection to set it on the</span>
                <span class="token comment">// instance. We might end up duplicating WebView/BlazorWebView anyway, in which case we wouldn&#39;t need this workaround.</span>
                <span class="token class-name"><span class="token keyword">var</span></span> webViewClientField <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">WebViewHandler</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetField</span><span class="token punctuation">(</span><span class="token string">&quot;_webViewClient&quot;</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>NonPublic <span class="token operator">|</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>Instance <span class="token operator">|</span> System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>BindingFlags<span class="token punctuation">.</span>FlattenHierarchy<span class="token punctuation">)</span><span class="token punctuation">;</span>
                webViewClientField<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> webViewClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-hybridwebviewrawmessagereceivedeventargs-类" tabindex="-1"><a class="header-anchor" href="#创建-hybridwebviewrawmessagereceivedeventargs-类" aria-hidden="true">#</a> 创建 HybridWebViewRawMessageReceivedEventArgs 类</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">HybridWebView</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebViewRawMessageReceivedEventArgs</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">EventArgs</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token function">HybridWebViewRawMessageReceivedEventArgs</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Message <span class="token operator">=</span> message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Message <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-hybridwebviewservicecollectionextensions-类" tabindex="-1"><a class="header-anchor" href="#创建-hybridwebviewservicecollectionextensions-类" aria-hidden="true">#</a> 创建 HybridWebViewServiceCollectionExtensions 类</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">HybridWebView</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DependencyInjection</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebViewServiceCollectionExtensions</span>
    <span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddHybridWebView</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			services<span class="token punctuation">.</span><span class="token function">ConfigureMauiHandlers</span><span class="token punctuation">(</span><span class="token keyword">static</span> handlers <span class="token operator">=&gt;</span> handlers<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>HybridWebView<span class="token punctuation">.</span>HybridWebView<span class="token punctuation">,</span> HybridWebViewHandler<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建平台控件" tabindex="-1"><a class="header-anchor" href="#创建平台控件" aria-hidden="true">#</a> 创建平台控件</h3><p>为处理程序创建映射器后，必须在所有平台上提供处理程序实现。 这可以通过在 Platforms 文件夹的子文件夹中添加分部类处理程序实现来实现。 或者，可以将项目配置为支持基于文件名的多目标或基于文件夹的多目标，或同时支持这两者。</p><h4 id="android-平台控件" tabindex="-1"><a class="header-anchor" href="#android-平台控件" aria-hidden="true">#</a> Android 平台控件</h4><h5 id="创建-androidhybridwebviewclient-类" tabindex="-1"><a class="header-anchor" href="#创建-androidhybridwebviewclient-类" aria-hidden="true">#</a> 创建 AndroidHybridWebViewClient 类</h5><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Android<span class="token punctuation">.</span>Webkit</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Maui<span class="token punctuation">.</span>Platform</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name">AWebView</span> <span class="token operator">=</span> <span class="token class-name">Android<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span>WebView</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HybridWebView</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AndroidHybridWebViewClient</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MauiWebViewClient</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">HybridWebViewHandler</span> _handler<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">AndroidHybridWebViewClient</span><span class="token punctuation">(</span><span class="token class-name">HybridWebViewHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">WebResourceResponse</span> <span class="token function">ShouldInterceptRequest</span><span class="token punctuation">(</span><span class="token class-name">AWebView</span> view<span class="token punctuation">,</span> <span class="token class-name">IWebResourceRequest</span> request<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token class-name">Uri</span> uri <span class="token operator">&amp;&amp;</span> HybridWebView<span class="token punctuation">.</span>AppOriginUri<span class="token punctuation">.</span><span class="token function">IsBaseOf</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> relativePath <span class="token operator">=</span> HybridWebView<span class="token punctuation">.</span>AppOriginUri<span class="token punctuation">.</span><span class="token function">MakeRelativeUri</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name"><span class="token keyword">string</span></span> contentType<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    relativePath <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>HybridWebView<span class="token punctuation">)</span>_handler<span class="token punctuation">.</span>VirtualView<span class="token punctuation">)</span><span class="token punctuation">.</span>MainFile<span class="token punctuation">;</span>
                    contentType <span class="token operator">=</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> requestExtension <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    contentType <span class="token operator">=</span> requestExtension <span class="token keyword">switch</span>
                    <span class="token punctuation">{</span>
                        <span class="token string">&quot;.htm&quot;</span> <span class="token keyword">or</span> <span class="token string">&quot;.html&quot;</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">,</span>
                        <span class="token string">&quot;.js&quot;</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;application/javascript&quot;</span><span class="token punctuation">,</span>
                        <span class="token string">&quot;.css&quot;</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;text/css&quot;</span><span class="token punctuation">,</span>
                        _ <span class="token operator">=&gt;</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name"><span class="token keyword">var</span></span> assetPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>HybridWebView<span class="token punctuation">)</span>_handler<span class="token punctuation">.</span>VirtualView<span class="token punctuation">)</span><span class="token punctuation">.</span>HybridAssetRoot<span class="token punctuation">,</span> relativePath<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name"><span class="token keyword">var</span></span> contentStream <span class="token operator">=</span> <span class="token function">PlatformOpenAppPackageFile</span><span class="token punctuation">(</span>assetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>contentStream <span class="token keyword">is</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> notFoundContent <span class="token operator">=</span> <span class="token string">&quot;Resource not found (404)&quot;</span><span class="token punctuation">;</span>

                    <span class="token class-name"><span class="token keyword">var</span></span> notFoundByteArray <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>notFoundContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> notFoundContentStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span>notFoundByteArray<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebResourceResponse</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token string">&quot;Not Found&quot;</span><span class="token punctuation">,</span> <span class="token function">GetHeaders</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> notFoundContentStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// TODO: We don&#39;t know the content length because Android doesn&#39;t tell us. Seems to work without it!</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebResourceResponse</span><span class="token punctuation">(</span>contentType<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span> <span class="token function">GetHeaders</span><span class="token punctuation">(</span>contentType<span class="token punctuation">)</span><span class="token punctuation">,</span> contentStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ShouldInterceptRequest</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token return-type class-name">Stream</span> <span class="token function">PlatformOpenAppPackageFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filename<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            filename <span class="token operator">=</span> FileSystemUtils<span class="token punctuation">.</span><span class="token function">NormalizePath</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> _handler<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>Assets<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Java<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>FileNotFoundException</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">FileSystemUtils</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">NormalizePath</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filename<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                filename
                    <span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token char">&#39;\\\\&#39;</span><span class="token punctuation">,</span> Path<span class="token punctuation">.</span>DirectorySeparatorChar<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">,</span> Path<span class="token punctuation">.</span>DirectorySeparatorChar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token return-type class-name">IDictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetHeaders</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> contentType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
                <span class="token punctuation">{</span> <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> contentType <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建-hybridwebview-android-类" tabindex="-1"><a class="header-anchor" href="#创建-hybridwebview-android-类" aria-hidden="true">#</a> 创建 HybridWebView.Android 类</h5><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Android<span class="token punctuation">.</span>Webkit</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Java<span class="token punctuation">.</span>Interop</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name">AWebView</span> <span class="token operator">=</span> <span class="token class-name">Android<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span>WebView</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HybridWebView</span>
<span class="token punctuation">{</span>
    <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebView</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Using an IP address means that WebView2 doesn&#39;t wait for any DNS resolution,</span>
        <span class="token comment">// making it substantially faster. Note that this isn&#39;t real HTTP traffic, since</span>
        <span class="token comment">// we intercept all the requests within this origin.</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">string</span></span> AppHostAddress <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Gets the application&#39;s base URI. Defaults to <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>c</span><span class="token punctuation">&gt;</span></span>https://0.0.0.0/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>c</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">string</span></span> AppOrigin <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;https://</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">AppHostAddress</span><span class="token punctuation">}</span></span><span class="token string">/&quot;</span></span><span class="token punctuation">;</span>

        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">Uri</span> AppOriginUri <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span>AppOrigin<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token class-name">HybridWebViewJavaScriptInterface</span> _javaScriptInterface<span class="token punctuation">;</span>

        <span class="token keyword">async</span> <span class="token keyword">partial</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeHybridWebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> awv <span class="token operator">=</span> <span class="token punctuation">(</span>AWebView<span class="token punctuation">)</span>Handler<span class="token punctuation">.</span>PlatformView<span class="token punctuation">;</span>
            awv<span class="token punctuation">.</span>Settings<span class="token punctuation">.</span>JavaScriptEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            _javaScriptInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HybridWebViewJavaScriptInterface</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            awv<span class="token punctuation">.</span><span class="token function">AddJavascriptInterface</span><span class="token punctuation">(</span>_javaScriptInterface<span class="token punctuation">,</span> <span class="token string">&quot;hybridWebViewHost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            awv<span class="token punctuation">.</span><span class="token function">LoadUrl</span><span class="token punctuation">(</span>AppOrigin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">HybridWebViewJavaScriptInterface</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Java<span class="token punctuation">.</span>Lang<span class="token punctuation">.</span>Object</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">HybridWebView</span> _hybridWebView<span class="token punctuation">;</span>

            <span class="token keyword">public</span> <span class="token function">HybridWebViewJavaScriptInterface</span><span class="token punctuation">(</span><span class="token class-name">HybridWebView</span> hybridWebView<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _hybridWebView <span class="token operator">=</span> hybridWebView<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JavascriptInterface</span></span><span class="token punctuation">]</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Export</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;sendMessage&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendMessage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _hybridWebView<span class="token punctuation">.</span><span class="token function">OnMessageReceived</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>HybridWebView 项目除了项目引用的方式外也可以打包为 NuGet 包，方便其他项目的引用。</p></div><h2 id="自定义-hybridwebview-控件使用" tabindex="-1"><a class="header-anchor" href="#自定义-hybridwebview-控件使用" aria-hidden="true">#</a> 自定义 HybridWebView 控件使用</h2><h3 id="创建-net-maui-应用" tabindex="-1"><a class="header-anchor" href="#创建-net-maui-应用" aria-hidden="true">#</a> 创建 .NET MAUI 应用</h3><p>略</p><h3 id="添加-hybridwebview-项目引用" tabindex="-1"><a class="header-anchor" href="#添加-hybridwebview-项目引用" aria-hidden="true">#</a> 添加 HybridWebView 项目引用</h3><figure><img src="`+b+`" alt="添加 HybridWebView 项目引用" tabindex="0" loading="lazy"><figcaption>添加 HybridWebView 项目引用</figcaption></figure><h3 id="新建-web-文件" tabindex="-1"><a class="header-anchor" href="#新建-web-文件" aria-hidden="true">#</a> 新建 Web 文件</h3><p>在 Resources/Raw 路径下新建 hybrid_root 文件夹用于存放 Web 文件。</p><h4 id="新建-rawmessages-html-文件" tabindex="-1"><a class="header-anchor" href="#新建-rawmessages-html-文件" aria-hidden="true">#</a> 新建 rawmessages.html 文件</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/1999/xhtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">SendToJs</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&#39;收到来自DotNet的消息: &#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">SendRawMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">CoolJSLibrary</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;valueInput&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

            HybridWebView<span class="token punctuation">.</span><span class="token function">SendRawMessageToDotNet</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/HybridWebView.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/extra_code.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>styles/my-styles.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>基于WebView的混合页面demo: 原始消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navBar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        原始消息 | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/methodinvoke.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>方法调用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        原始消息作为原始字符串从JavaScript发送到.NET，无需进一步处理。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        消息 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>valueInput<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JS向.NET发送消息<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">SendRawMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>向.NET发送原始消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>
        JS消息日志:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageLog<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 10em<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// Notify .NET code which page we&#39;re on</span>
        HybridWebView<span class="token punctuation">.</span><span class="token function">SendRawMessageToDotNet</span><span class="token punctuation">(</span><span class="token string">&quot;page:1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="新建-methodinvoke-html-文件" tabindex="-1"><a class="header-anchor" href="#新建-methodinvoke-html-文件" aria-hidden="true">#</a> 新建 methodinvoke.html 文件</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/1999/xhtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">JsAddNumbers</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
            <span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&#39;用参数 (&#39;</span> <span class="token operator">+</span> a <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">&#39;)请求.NET, 并返回: &#39;</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">CallDotNetMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&#39;使用参数请求.NET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            HybridWebView<span class="token punctuation">.</span><span class="token function">SendInvokeMessageToDotNet</span><span class="token punctuation">(</span><span class="token string">&quot;CallMeFromScript&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;消息来自JS&quot;</span><span class="token punctuation">,</span> <span class="token number">987</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/HybridWebView.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/extra_code.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>styles/my-styles.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>基于WebView的混合页面demo: 方法调用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navBar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/rawmessages.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>原始消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> | 方法调用
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        Methods can be invoked in both directions:

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>JavaScript可以通过调用 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>HybridWebView.SendInvokeMessageToDotNet(&quot;DotNetMethodName&quot;, [&quot;param1&quot;, 123]);<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> 调用.NET方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>.NET可以通过调用 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>var sum = await webView.InvokeJsMethodAsync<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>int</span><span class="token punctuation">&gt;</span></span>(&quot;JsAddNumbers&quot;, 123, 456);<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> 方法调用JS方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">CallDotNetMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>使用参数请求.NET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>
        JS消息日志:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageLog<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 10em<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// Notify .NET code which page we&#39;re on</span>
        HybridWebView<span class="token punctuation">.</span><span class="token function">SendRawMessageToDotNet</span><span class="token punctuation">(</span><span class="token string">&quot;page:2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="新建相关-js-脚本" tabindex="-1"><a class="header-anchor" href="#新建相关-js-脚本" aria-hidden="true">#</a> 新建相关 JS 脚本</h4>`,33),W=n("p",null,"在 Resources/Raw/hybrid_root/js 路径下新建 extra_code.js 文件",-1),S=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),s(" msgCount "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"CoolJSLibrary"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"message"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"你的第#"'),s(),n("span",{class:"token operator"},"+"),s(" msgCount"),n("span",{class:"token operator"},"++"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'"条JS消息: "'),s(),n("span",{class:"token operator"},"+"),s(" message"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"Log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"message"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"var"),s(" logArea "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'messageLog'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    logArea`),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token string"},"'\\r\\n'"),s(),n("span",{class:"token operator"},"+"),s(" message"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// Scroll to end"),s(`
    logArea`),n("span",{class:"token punctuation"},"."),s("selectionStart "),n("span",{class:"token operator"},"="),s(" logArea"),n("span",{class:"token punctuation"},"."),s("textLength"),n("span",{class:"token punctuation"},";"),s(`
    logArea`),n("span",{class:"token punctuation"},"."),s("scrollTop "),n("span",{class:"token operator"},"="),s(" logArea"),n("span",{class:"token punctuation"},"."),s("scrollHeight"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=n("p",null,"在 Resources/Raw/hybrid_root/js 路径下新建 HybridWebView.js 文件",-1),x=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// Standard methods for HybridWebView"),s(`

window`),n("span",{class:"token punctuation"},"."),s("HybridWebView "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string-property property"},'"SendRawMessageToDotNet"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"SendRawMessageToDotNet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"message"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        window`),n("span",{class:"token punctuation"},"."),s("HybridWebView"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SendMessageToDotNet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`

    `),n("span",{class:"token string-property property"},'"SendInvokeMessageToDotNet"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"SendInvokeMessageToDotNet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("methodName"),n("span",{class:"token punctuation"},","),s(" paramValues")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" paramValues "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token string"},"'undefined'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isArray"),n("span",{class:"token punctuation"},"("),s("paramValues"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                paramValues `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("paramValues"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"var"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" paramValues"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                paramValues`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stringify"),n("span",{class:"token punctuation"},"("),s("paramValues"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`

        window`),n("span",{class:"token punctuation"},"."),s("HybridWebView"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SendMessageToDotNet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stringify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string-property property"},'"MethodName"'),n("span",{class:"token operator"},":"),s(" methodName"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-property property"},'"ParamValues"'),n("span",{class:"token operator"},":"),s(" paramValues "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`

    `),n("span",{class:"token string-property property"},'"SendMessageToDotNet"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"SendMessageToDotNet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("messageType"),n("span",{class:"token punctuation"},","),s(" messageContent")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" message "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stringify"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string-property property"},'"MessageType"'),n("span",{class:"token operator"},":"),s(" messageType"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-property property"},'"MessageContent"'),n("span",{class:"token operator"},":"),s(" messageContent "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("window"),n("span",{class:"token punctuation"},"."),s("chrome "),n("span",{class:"token operator"},"&&"),s(" window"),n("span",{class:"token punctuation"},"."),s("chrome"),n("span",{class:"token punctuation"},"."),s("webview"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// Windows WebView2"),s(`
            window`),n("span",{class:"token punctuation"},"."),s("chrome"),n("span",{class:"token punctuation"},"."),s("webview"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postMessage"),n("span",{class:"token punctuation"},"("),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("window"),n("span",{class:"token punctuation"},"."),s("webkit "),n("span",{class:"token operator"},"&&"),s(" window"),n("span",{class:"token punctuation"},"."),s("webkit"),n("span",{class:"token punctuation"},"."),s("messageHandlers "),n("span",{class:"token operator"},"&&"),s(" window"),n("span",{class:"token punctuation"},"."),s("webkit"),n("span",{class:"token punctuation"},"."),s("messageHandlers"),n("span",{class:"token punctuation"},"."),s("webwindowinterop"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// iOS and MacCatalyst WKWebView"),s(`
            window`),n("span",{class:"token punctuation"},"."),s("webkit"),n("span",{class:"token punctuation"},"."),s("messageHandlers"),n("span",{class:"token punctuation"},"."),s("webwindowinterop"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postMessage"),n("span",{class:"token punctuation"},"("),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// Android WebView"),s(`
            hybridWebViewHost`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sendMessage"),n("span",{class:"token punctuation"},"("),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=i(`<h4 id="新建相关css样式" tabindex="-1"><a class="header-anchor" href="#新建相关css样式" aria-hidden="true">#</a> 新建相关CSS样式</h4><p>在 Resources/Raw/hybrid_root/styles 路径下新建 my-styles.css 文件</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> beige<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">h1</span> <span class="token punctuation">{</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span> .5em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">h2</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.1em<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span> .5em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> .5em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.navBar</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> .5em<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> .5em<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid darkgray<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mauiprogram-修改" tabindex="-1"><a class="header-anchor" href="#mauiprogram-修改" aria-hidden="true">#</a> MauiProgram 修改</h3><p>对 MauiProgram 文件修改，添加对应的自定义控件服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Logging</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">MauiVueDemo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MauiProgram</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">MauiApp</span> <span class="token function">CreateMauiApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> MauiApp<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		builder
			<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UseMauiApp</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>App<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">ConfigureFonts</span><span class="token punctuation">(</span>fonts <span class="token operator">=&gt;</span>
			<span class="token punctuation">{</span>
				fonts<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">&quot;OpenSans-Regular.ttf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OpenSansRegular&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				fonts<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">&quot;OpenSans-Semibold.ttf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OpenSansSemibold&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">if</span> </span><span class="token return-type class-name">DEBUG</span>
        builder<span class="token punctuation">.</span>Logging<span class="token punctuation">.</span><span class="token function">AddDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#</span><span class="token return-type class-name">endif</span>
        builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddHybridWebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mainpage-修改" tabindex="-1"><a class="header-anchor" href="#mainpage-修改" aria-hidden="true">#</a> MainPage 修改</h3><p>对 MainPage 页面进行修改，使其呈现 HybridWebView 控件的效果。</p>`,8),T=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token prolog"},'<?xml version="1.0" encoding="utf-8" ?>'),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("ContentPage")]),s(),n("span",{class:"token attr-name"},"xmlns"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("http://schemas.microsoft.com/dotnet/2021/maui"),n("span",{class:"token punctuation"},'"')]),s(`
             `),n("span",{class:"token attr-name"},[n("span",{class:"token namespace"},"xmlns:"),s("x")]),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("http://schemas.microsoft.com/winfx/2009/xaml"),n("span",{class:"token punctuation"},'"')]),s(`
             `),n("span",{class:"token attr-name"},[n("span",{class:"token namespace"},"xmlns:"),s("hwv")]),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("clr-namespace:HybridWebView;assembly=HybridWebView"),n("span",{class:"token punctuation"},'"')]),s(`
             `),n("span",{class:"token attr-name"},[n("span",{class:"token namespace"},"x:"),s("Class")]),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("MauiVueDemo.Views.HybridWebView"),n("span",{class:"token punctuation"},'"')]),s(`
             `),n("span",{class:"token attr-name"},"Title"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("HybridWebView"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Grid")]),s(),n("span",{class:"token attr-name"},"ColumnDefinitions"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("2*,1*,1*"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"RowDefinitions"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Auto,Auto,1*,3*"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Label")]),s(`
                `),n("span",{class:"token attr-name"},"Text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("{Binding CurrentPageName}"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"FontSize"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("32"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"HorizontalOptions"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Center"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`

        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Button")]),s(),n("span",{class:"token attr-name"},"Grid.Column"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("向JS发送原始消息"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Clicked"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("OnSendRawMessageToJS"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"HorizontalOptions"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Center"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"IsEnabled"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("{Binding PageAllowsRawMessage}"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Margin"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("5"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`

        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Button")]),s(),n("span",{class:"token attr-name"},"Grid.Column"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("2"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("调用JS方法"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Clicked"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("OnInvokeJSMethod"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"HorizontalOptions"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Center"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"IsEnabled"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("{Binding PageAllowsMethodInvoke}"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Margin"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("5"),n("span",{class:"token punctuation"},'"')]),s("  "),n("span",{class:"token punctuation"},"/>")]),s(`

        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Label")]),s(`
                `),n("span",{class:"token attr-name"},"Grid.Row"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"Grid.ColumnSpan"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(` 
                `),n("span",{class:"token attr-name"},"Text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s(".NET消息日志"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"FontSize"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("16"),n("span",{class:"token punctuation"},'"')]),s(`
                `),n("span",{class:"token attr-name"},"Margin"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("5"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},"/>")]),s(`

        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("Editor")]),s(),n("span",{class:"token attr-name"},"Grid.Row"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"Grid.ColumnSpan"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"Text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("{Binding MessageLog}"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"IsReadOnly"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("True"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"CursorPosition"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("{Binding MessageLogPosition}"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`

        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token namespace"},"hwv:"),s("HybridWebView")]),s(),n("span",{class:"token attr-name"},"Grid.Row"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"Grid.ColumnSpan"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},[n("span",{class:"token namespace"},"x:"),s("Name")]),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("myHybridWebView"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"HybridAssetRoot"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("hybrid_root"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"MainFile"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("rawmessages.html"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"RawMessageReceived"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("OnHybridWebViewRawMessageReceived"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("Grid")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("ContentPage")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token namespace"},"HybridWebView"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"namespace"),s(),n("span",{class:"token namespace"},"MauiVueDemo"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"partial"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MainPage"),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"ContentPage")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"HybridAppPageID"),s(" _currentPage"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"int")]),s(" _messageCount"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"MainPage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token function"},"InitializeComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        BindingContext `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},";"),s(`

        myHybridWebView`),n("span",{class:"token punctuation"},"."),s("JSInvokeTarget "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"MyJSInvokeTarget"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" CurrentPageName "),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"当前hybrid页面: '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"_currentPage"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" MessageLog "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"int")]),s(" MessageLogPosition "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"bool")]),s(" PageAllowsRawMessage "),n("span",{class:"token operator"},"=>"),s(" _currentPage "),n("span",{class:"token operator"},"=="),s(" HybridAppPageID"),n("span",{class:"token punctuation"},"."),s("RawMessages"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"bool")]),s(" PageAllowsMethodInvoke "),n("span",{class:"token operator"},"=>"),s(" _currentPage "),n("span",{class:"token operator"},"=="),s(" HybridAppPageID"),n("span",{class:"token punctuation"},"."),s("MethodInvoke"),n("span",{class:"token punctuation"},";"),s(`


    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"OnSendRawMessageToJS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" sender"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"EventArgs"),s(" e"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        _ `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" myHybridWebView"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"EvaluateJavaScriptAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},`$"SendToJs('这是来自.NET的请求, 时间: `),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("DateTimeOffset"),n("span",{class:"token punctuation"},"."),s("Now")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},`!')"`)]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"OnInvokeJSMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" sender"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"EventArgs"),s(" e"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" sum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" myHybridWebView"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"InvokeJsMethodAsync"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"JsAddNumbers"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"456"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token function"},"WriteToLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"JS的返回值: '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"sum"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"OnHybridWebViewRawMessageReceived"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" sender"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"HybridWebViewRawMessageReceivedEventArgs"),s(" e"),n("span",{class:"token punctuation"},")"),s(`
     `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" PagePrefix "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"page:"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StartsWith"),n("span",{class:"token punctuation"},"("),s("PagePrefix"),n("span",{class:"token punctuation"},","),s(" StringComparison"),n("span",{class:"token punctuation"},"."),s("Ordinal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            _currentPage `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("HybridAppPageID"),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Parse"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Substring"),n("span",{class:"token punctuation"},"("),s("PagePrefix"),n("span",{class:"token punctuation"},"."),s("Length"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token function"},"OnPropertyChanged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("CurrentPageName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token function"},"OnPropertyChanged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("PageAllowsRawMessage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token function"},"OnPropertyChanged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("PageAllowsMethodInvoke"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"else"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token function"},"WriteToLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"收到 Web Message: '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("e"),n("span",{class:"token punctuation"},"."),s("Message")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"WriteToLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" message"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        MessageLog `),n("span",{class:"token operator"},"+="),s(" Environment"),n("span",{class:"token punctuation"},"."),s("NewLine "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("_messageCount"),n("span",{class:"token operator"},"++")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},': "')]),s(),n("span",{class:"token operator"},"+"),s(" message"),n("span",{class:"token punctuation"},";"),s(`
        MessageLogPosition `),n("span",{class:"token operator"},"="),s(" MessageLog"),n("span",{class:"token punctuation"},"."),s("Length"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token function"},"OnPropertyChanged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("MessageLog"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token function"},"OnPropertyChanged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("MessageLogPosition"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"sealed"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyJSInvokeTarget"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"MainPage"),s(" _mainPage"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"MyJSInvokeTarget"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"MainPage"),s(" mainPage"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            _mainPage `),n("span",{class:"token operator"},"="),s(" mainPage"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`

        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"CallMeFromScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" message"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"int")]),s(),n("span",{class:"token keyword"},"value"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            _hybridWebView`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteToLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},`$"我是.NET方法， 这是一个来自JS的请求， message='`),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"message"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"' and value="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[n("span",{class:"token keyword"},"value")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"enum"),s(),n("span",{class:"token class-name"},"HybridAppPageID"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        MainPage `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(`
        RawMessages `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
        MethodInvoke `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("h3",{id:"交互效果",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#交互效果","aria-hidden":"true"},"#"),s(" 交互效果")],-1),C=n("figure",null,[n("img",{src:g,alt:"原始消息交互",tabindex:"0",loading:"lazy"}),n("figcaption",null,"原始消息交互")],-1),_=n("figure",null,[n("img",{src:y,alt:"方法调用交互",tabindex:"0",loading:"lazy"}),n("figcaption",null,"方法调用交互")],-1);function N(R,J){const u=l("ExternalLinkIcon"),c=l("Tabs");return r(),d("div",null,[h,v(" more "),f,q,n("p",null,[s("本章节代码来自开源项目："),n("a",V,[s("MauiCSharpInteropWebView"),o(u)])]),M,o(c,{id:"103",data:[{title:"extra_code.js"},{title:"HybridWebView.js"}]},{tab0:a(({title:t,value:e,isActive:p})=>[W,S]),tab1:a(({title:t,value:e,isActive:p})=>[H,x]),_:1},8,["data"]),A,o(c,{id:"137",data:[{title:"MainPage.xaml"},{title:"MainPage.xaml.cs"}]},{tab0:a(({title:t,value:e,isActive:p})=>[T]),tab1:a(({title:t,value:e,isActive:p})=>[P]),_:1},8,["data"]),I,C,_])}const E=k(w,[["render",N],["__file","maui-webview-hunhekaifa.html.vue"]]);export{E as default};
