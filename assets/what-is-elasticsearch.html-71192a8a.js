import{_ as e,X as i,Y as s,Z as c,$ as a,a3 as l}from"./framework-8e4c1295.js";const h={},r=a("div",{class:"hint-container tip"},[a("p",{class:"hint-container-title"},"✨✨✨✨✨"),a("p",null,"本系列基于 Elasticsearch 官方文档翻译")],-1),t=l('<h2 id="什么是elasticsearch" tabindex="-1"><a class="header-anchor" href="#什么是elasticsearch" aria-hidden="true">#</a> 什么是Elasticsearch？</h2><p><strong>您知道，用于搜索（和分析）</strong></p><p>Elasticsearch 是 Elastic Stack 核心的分布式搜索和分析引擎。Logstash 和 Beats 有助于收集、聚合和丰富数据，并将其存储在 Elasticsearch 中。Kibana 可以让您交互式地探索、可视化和共享数据见解，并管理和监控整个堆栈。Elasticsearch 是索引、搜索和分析的魔法发生的地方。</p><p>Elasticsearch 为所有类型的数据提供接近实时的搜索和分析。无论您拥有结构化或非结构化文本、数字数据还是地理空间数据，Elasticsearch 都可以高效地存储和索引它，以支持快速搜索。您可以远远超出简单的数据检索，并聚合信息以发现数据中的趋势和模式。随着数据和查询量的增长，Elasticsearch 的分布式性质使部署可以与之无缝扩展。</p><p>尽管并非所有问题都是搜索问题，但 Elasticsearch 提供了速度和灵活性来处理各种用例中的数据：</p><ul><li>向应用程序或网站添加搜索框</li><li>存储和分析日志、度量和安全事件数据</li><li>使用机器学习实时自动建模数据行为</li><li>使用 Elasticsearch 作为存储引擎自动化业务工作流程</li><li>使用 Elasticsearch 作为地理信息系统（GIS）管理、集成和分析空间信息</li><li>使用 Elasticsearch 作为生物信息学研究工具存储和处理遗传数据</li></ul><p>我们不断惊叹人们使用搜索的新颖方式。但是，无论您的用例是否类似于这些用例，或者您正在使用 Elasticsearch 解决一个新问题，您在 Elasticsearch 中处理数据、文档和索引的方式都是相同的。</p><h2 id="输入数据-文档和索引" tabindex="-1"><a class="header-anchor" href="#输入数据-文档和索引" aria-hidden="true">#</a> 输入数据：文档和索引</h2><p>Elasticsearch 是分布式文档存储库。它不是将信息存储为列数据，而是将复杂的数据结构序列化成 JSON 文档进行存储。当您在集群中有多个 Elasticsearch 节点时，所存储的文档被分散在整个集群中，并且可以从任何节点立即访问。</p><p>文档存储后，它会被索引并在<a href="">接近实时</a>（1 秒内）内完全可搜索。Elasticsearch 使用一种称为倒排索引的数据结构来支持非常快速的全文本搜索。倒排索引列出了每个出现在任何文档中的唯一单词，并标识每个单词出现的所有文档。</p><p>索引可以看作是优化的文档集合，每个文档都是包含数据的键值对集合。默认情况下，Elasticsearch 在每个字段中索引所有数据，并为每个索引的字段提供专用的优化数据结构。例如，文本字段存储在倒排索引中，而数字和地理位置字段存储在 BKD 树中。使用每个字段的数据结构来组装和返回搜索结果是 Elasticsearch 如此之快的原因。</p><p>Elasticsearch 还具有无模式的能力，这意味着可以在不明确指定如何处理文档中可能出现的每个不同字段的情况下对文档进行索引。启用动态映射时，Elasticsearch 会自动检测并将新字段添加到索引中。这种默认行为使得索引和探索数据变得容易——只需开始索引文档，Elasticsearch 将检测和映射布尔值、浮点数和整数值、日期和字符串到相应的 Elasticsearch 数据类型。</p><p>然而，您了解自己的数据以及想要如何使用它的比 Elasticsearch 更多。您可以定义规则来控制动态映射，并明确定义映射以完全控制字段的存储和索引方式。</p><p>定义自己的映射使您能够：</p><ul><li>区分全文本字符串字段和精确值字符串字段</li><li>执行特定语言的文本分析</li><li>优化字段以进行部分匹配</li><li>使用自定义日期格式</li><li>使用不能自动检测的数据类型，例如 geo_point 和 geo_shape</li></ul><p>通常对于不同目的需要以不同方式索引相同的字段。例如，您可能希望将字符串字段同时索引为文本字段以进行全文本搜索，并将其索引为关键字字段以进行排序或聚合数据。或者，您可能选择使用多个语言分析器来处理包含用户输入内容的字符串字段的内容。</p><p>在索引期间应用于全文本字段的分析链也会在搜索时使用。当您查询全文本字段时，查询文本在查找索引中的术语之前会经过相同的分析处理。</p><h2 id="输出信息-搜索和分析" tabindex="-1"><a class="header-anchor" href="#输出信息-搜索和分析" aria-hidden="true">#</a> 输出信息：搜索和分析</h2><p>虽然您可以将 Elasticsearch 用作文档存储库并检索文档及其元数据，但真正的强大之处在于能够轻松访问构建在 Apache Lucene 搜索引擎库上的完整搜索功能套件。</p><p>Elasticsearch 提供了一个简单、连贯的 REST API，用于管理您的集群以及索引和搜索您的数据。为测试目的，您可以直接从命令行或通过 Kibana 中的开发人员控制台轻松提交请求。从您的应用程序中，您可以使用您选择的语言的 <a href="">Elasticsearch 客户端</a>：Java、JavaScript、Go、.NET、PHP、Perl、Python 或 Ruby。</p><h3 id="搜索您的数据" tabindex="-1"><a class="header-anchor" href="#搜索您的数据" aria-hidden="true">#</a> 搜索您的数据</h3><p>Elasticsearch REST API 支持结构化查询、全文本查询和结合两者的复杂查询。结构化查询类似于您可以在 SQL 中构造的查询类型。例如，您可以在员工索引中搜索性别和年龄字段，并将匹配项按入职日期字段排序。全文本查询找到与查询字符串匹配的所有文档，并按相关性（它们对您的搜索术语的匹配程度）返回它们。</p><p>除了搜索单个术语外，还可以执行短语搜索、相似性搜索和前缀搜索，并获得自动完成建议。</p><p>有地理空间或其他数字数据需要搜索吗？Elasticsearch 在优化的数据结构中索引非文本数据，支持高性能的地理和数值查询。</p><p>您可以使用 Elasticsearch 全面的 JSON 风格查询语言（<a href="">Query DSL</a>）访问所有这些搜索功能。您还可以构造 <a href="">SQL 风格的查询</a>，在 Elasticsearch 内本地搜索和聚合数据，JDBC 和 ODBC 驱动程序使广泛的第三方应用程序可以通过 SQL 与 Elasticsearch 交互。</p><h3 id="分析您的数据" tabindex="-1"><a class="header-anchor" href="#分析您的数据" aria-hidden="true">#</a> 分析您的数据</h3><p>Elasticsearch 聚合使您能够构建数据的复杂摘要，并获得关键指标、模式和趋势的见解。聚合不仅仅是在“一堆稻草中找到针”，而且使您能够回答以下问题：</p><ul><li>有多少针在稻草堆中？</li><li>针的平均长度是多少？</li><li>按制造商细分的针的中位数长度是多少？</li><li>在过去六个月中每个月增加了多少针？</li></ul><p>您还可以使用聚合来回答更微妙的问题，例如：</p><ul><li>您最受欢迎的针制造商是谁？</li><li>有任何异常或异常的针团吗？</li></ul><p>因为聚合利用用于搜索的相同数据结构，所以它们也非常快速。这使您能够实时分析和可视化数据。随着数据的变化，您的报告和仪表板会更新，因此您可以根据最新信息采取行动。</p><p>更重要的是，聚合与搜索请求同时运行。您可以同时搜索文档、过滤结果并执行分析，使用相同的数据在单个请求中进行。由于聚合是在特定搜索的上下文中计算的，因此您不仅显示所有大小为 70 的针的数量，而且还显示符合用户搜索条件的大小为 70 不粘绣花针的数量。</p><h3 id="但等等-还有更多" tabindex="-1"><a class="header-anchor" href="#但等等-还有更多" aria-hidden="true">#</a> 但等等，还有更多</h3><p>想要自动化分析时间序列数据吗？您可以使用<a href="">机器学习功</a>能创建数据中正常行为的准确基线，并识别异常模式。通过机器学习，您可以检测到：</p><ul><li>与值、计数或频率的时间偏差有关的异常</li><li>统计罕见性</li><li>人群成员的异常行为</li></ul><p>最好的部分？您可以在不必指定算法、模型或其他与数据科学相关的配置的情况下完成此操作。</p><h2 id="可伸缩性和弹性-集群、节点和分片" tabindex="-1"><a class="header-anchor" href="#可伸缩性和弹性-集群、节点和分片" aria-hidden="true">#</a> 可伸缩性和弹性：集群、节点和分片</h2><p>Elasticsearch 被设计为始终可用并随着您的需求而扩展。它通过本质上是分布式的方式实现这一点。您可以向集群添加服务器（节点）以增加容量，Elasticsearch 会自动分配您的数据和查询负载到所有可用节点上。无需彻底改变应用程序，Elasticsearch 知道如何平衡多节点集群，以提供规模和高可用性。节点越多，越好。</p><p>这是如何运作的？在内部，Elasticsearch 索引实际上只是一个或多个物理分片的逻辑分组，其中每个分片实际上是一个独立的索引。通过将索引中的文档分布在多个分片上，并将这些分片分布在多个节点上，Elasticsearch 可以确保冗余性，从而既保护硬件故障，又随着节点添加到集群中而增加查询容量。随着集群的增长（或缩小），Elasticsearch 会自动迁移分片以重新平衡集群。</p><p>有两种类型的分片：主分片和副本分片。索引中的每个文档都属于一个主分片。副本分片是主分片的副本。副本提供了您的数据的冗余副本，以保护硬件故障，并增加了用于读取请求（如搜索或检索文档）的容量。</p><p>索引中的主分片数量在创建索引时固定，但副本分片数量可以在任何时候更改，而不会中断索引或查询操作。</p><h3 id="视情况而定" tabindex="-1"><a class="header-anchor" href="#视情况而定" aria-hidden="true">#</a> 视情况而定...</h3><p>关于分片大小和为索引配置的主分片数量，有许多性能考虑和权衡。分片越多，仅在维护这些索引方面就会有更多的开销。分片大小越大，当 Elasticsearch 需要重新平衡集群时，移动分片所需的时间越长。</p><p>查询许多小分片可使每个分片的处理速度更快，但更多的查询意味着更多的开销，因此查询较少数量的较大分片可能更快。简而言之... 这取决于具体情况。</p><p>作为一个起点：</p><ul><li>目标是保持平均分片大小在几 GB 到几十 GB 之间。对于基于时间的数据用例，通常看到的分片范围为 20GB 到 40GB。</li><li>避免 gazillion 分片问题。节点可以容纳的分片数与可用堆空间成比例。通常规则是每 GB 堆空间的分片数应小于 20。</li></ul><p>确定您的用例的最佳配置的最佳方法是通过<a href="">使用自己的数据和查询进行测试</a>。</p><h3 id="灾难情况" tabindex="-1"><a class="header-anchor" href="#灾难情况" aria-hidden="true">#</a> 灾难情况</h3><p>集群的节点需要良好、可靠的彼此连接。为提供更好的连接，通常将节点放置在同一数据中心或附近的数据中心中。但是，为了保持高可用性，您还需要避免任何单点故障。在某个位置发生重大故障的情况下，另一个位置的服务器需要能够接管。答案是什么呢？——跨集群复制（CCR）。</p><p>CCR 提供了一种自动将索引从主集群同步到作为热备份的远程辅助集群的方法。如果主集群失败，辅助集群可以接管。您还可以使用 CCR 创建辅助集群，在地理接近用户的位置为读取请求提供服务。</p><p>跨集群复制是主动-被动的。主集群上的索引是活动领导者索引，处理所有写入请求。复制到辅助集群的索引是只读的跟随者。</p><h3 id="护理和喂养" tabindex="-1"><a class="header-anchor" href="#护理和喂养" aria-hidden="true">#</a> 护理和喂养</h3><p>与任何企业系统一样，您需要工具来安全地管理和监视 Elasticsearch 集群。集成到 Elasticsearch 中的安全、监视和管理功能使您可以使用 Kibana 作为管理集群的控制中心。像数据卷和索引生命周期管理之类的功能可帮助您随着时间的推移智能地管理数据。</p>',53);function p(d,n){return i(),s("div",null,[r,c(" more "),t])}const o=e(h,[["render",p],["__file","what-is-elasticsearch.html.vue"]]);export{o as default};
