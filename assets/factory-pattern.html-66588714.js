const t=JSON.parse('{"key":"v-74105bde","path":"/columns/blog-posts/series/design-pattern/factory-pattern.html","title":"工厂模式","lang":"zh-CN","frontmatter":{"title":"工厂模式","date":"2022-04-30T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","创建型模式"],"timeline":true,"order":2,"description":"✨✨✨✨✨ 工厂模式是一种创建型设计模式，它提供了一种封装对象实例化的方式，让子类来决定实例化哪个类，以及如何创建这个类的实例。工厂模式通过将对象的创建和使用分离，可以减少代码中的重复，提高代码的可扩展性和可维护性。","head":[["meta",{"property":"og:url","content":"http://goodsxx.cn/columns/blog-posts/series/design-pattern/factory-pattern.html"}],["meta",{"property":"og:site_name","content":"Growing Notes"}],["meta",{"property":"og:title","content":"工厂模式"}],["meta",{"property":"og:description","content":"✨✨✨✨✨ 工厂模式是一种创建型设计模式，它提供了一种封装对象实例化的方式，让子类来决定实例化哪个类，以及如何创建这个类的实例。工厂模式通过将对象的创建和使用分离，可以减少代码中的重复，提高代码的可扩展性和可维护性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-22T08:29:33.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"创建型模式"}],["meta",{"property":"article:published_time","content":"2022-04-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-22T08:29:33.000Z"}]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]},{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]},{"level":2,"title":"其它实现方式","slug":"其它实现方式","link":"#其它实现方式","children":[]}],"git":{"createdTime":1671520332000,"updatedTime":1677054573000,"contributors":[{"name":"SongXinXin","email":"1368084801@qq.com","commits":3}]},"readingTime":{"minutes":6.17,"words":1852},"filePathRelative":"columns/blog-posts/series/design-pattern/factory-pattern.md","localizedDate":"2022年4月30日","excerpt":"<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">✨✨✨✨✨</p>\\n<p>工厂模式是一种创建型设计模式，它提供了一种封装对象实例化的方式，让子类来决定实例化哪个类，以及如何创建这个类的实例。工厂模式通过将对象的创建和使用分离，可以减少代码中的重复，提高代码的可扩展性和可维护性。</p>\\n</div>\\n","autoDesc":true}');export{t as data};
