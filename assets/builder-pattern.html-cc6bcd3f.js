const t=JSON.parse('{"key":"v-e308de26","path":"/columns/blog-posts/series/design-pattern/builder-pattern.html","title":"建造者模式","lang":"zh-CN","frontmatter":{"title":"建造者模式","date":"2022-05-05T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","创建型模式"],"timeline":true,"order":4,"description":"✨✨✨✨✨ 建造者模式（Builder Pattern）是一种对象创建型模式，用于将一个复杂对象的构建过程和表示分离，使得同样的构建过程可以创建不同的表示。该模式通常由一个指挥者（Director）和一个建造者（Builder）组成，指挥者负责指导建造者进行构建，而建造者负责具体构建过程。建造者模式的核心思想是分步骤构建一个复杂对象，并且可以控制每个步骤的执行顺序，从而得到一个更加精细化的对象。","head":[["meta",{"property":"og:url","content":"http://goodsxx.cn/columns/blog-posts/series/design-pattern/builder-pattern.html"}],["meta",{"property":"og:site_name","content":"Growing Notes"}],["meta",{"property":"og:title","content":"建造者模式"}],["meta",{"property":"og:description","content":"✨✨✨✨✨ 建造者模式（Builder Pattern）是一种对象创建型模式，用于将一个复杂对象的构建过程和表示分离，使得同样的构建过程可以创建不同的表示。该模式通常由一个指挥者（Director）和一个建造者（Builder）组成，指挥者负责指导建造者进行构建，而建造者负责具体构建过程。建造者模式的核心思想是分步骤构建一个复杂对象，并且可以控制每个步骤的执行顺序，从而得到一个更加精细化的对象。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-20T09:06:53.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"创建型模式"}],["meta",{"property":"article:published_time","content":"2022-05-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-20T09:06:53.000Z"}]]},"headers":[],"git":{"createdTime":1676884013000,"updatedTime":1676884013000,"contributors":[{"name":"SongXinXin","email":"1368084801@qq.com","commits":1}]},"readingTime":{"minutes":3.34,"words":1001},"filePathRelative":"columns/blog-posts/series/design-pattern/builder-pattern.md","localizedDate":"2022年5月5日","excerpt":"<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">✨✨✨✨✨</p>\\n<p>建造者模式（Builder Pattern）是一种对象创建型模式，用于将一个复杂对象的构建过程和表示分离，使得同样的构建过程可以创建不同的表示。该模式通常由一个指挥者（Director）和一个建造者（Builder）组成，指挥者负责指导建造者进行构建，而建造者负责具体构建过程。建造者模式的核心思想是分步骤构建一个复杂对象，并且可以控制每个步骤的执行顺序，从而得到一个更加精细化的对象。</p>\\n</div>\\n","autoDesc":true}');export{t as data};
