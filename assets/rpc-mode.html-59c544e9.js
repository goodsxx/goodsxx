import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as u,c as k,b as r,w as a,e as t,a as n,d as s}from"./app-e2ce661c.js";const m="/assets/1678794668916-ffb3990c.png",d={},b=t('<div class="hint-container tip"><p class="hint-container-title">✨✨✨✨✨</p><p>RPC（Remote Procedure Call）模式是一种实现远程过程调用的消息模式，在 RabbitMQ 中通过将请求和响应封装到消息中，实现了客户端和服务端之间的通信。在 RPC 模式中，客户端发送一个带有回调队列地址的请求消息，服务端接收到请求消息后处理请求，并将响应发送到指定的回调队列中。</p></div><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>RPC（Remote Procedure Call）模式是一种实现远程过程调用的消息模式，在 RabbitMQ 中通过将请求和响应封装到消息中，实现了客户端和服务端之间的通信。在 RPC 模式中，客户端发送一个带有回调队列地址的请求消息，服务端接收到请求消息后处理请求，并将响应发送到指定的回调队列中。</p><figure><img src="'+m+'" alt="RPC模式" tabindex="0" loading="lazy"><figcaption>RPC模式</figcaption></figure><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>RPC 模式适用于需要实现远程过程调用的场景，比如在分布式系统中，需要将某个操作委托给远程服务器进行处理并返回结果。</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2>',7),v=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"RpcClient"),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"IDisposable")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" QUEUE_NAME "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"rpc_queue"'),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},"IConnection"),s(" connection"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},"IModel"),s(" channel"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" replyQueueName"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},[s("ConcurrentDictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(" TaskCompletionSource"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" callbackMapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"RpcClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 创建连接工厂对象，指定主机名和登录凭据信息"),s(`
        `),n("span",{class:"token class-name"},"ConnectionFactory"),s(" factory "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            HostName `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"192.168.3.100"'),n("span",{class:"token punctuation"},","),s(`
            Port `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5672"),n("span",{class:"token punctuation"},","),s(`
            UserName `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"guest"'),n("span",{class:"token punctuation"},","),s(`
            Password `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"guest"'),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 创建连接对象和通道对象"),s(`
        connection `),n("span",{class:"token operator"},"="),s(" factory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateConnection"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        channel `),n("span",{class:"token operator"},"="),s(" connection"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 创建一个自动生成名称的队列，用于接收来自服务器端的响应消息"),s(`
        replyQueueName `),n("span",{class:"token operator"},"="),s(" channel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"QueueDeclare"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("QueueName"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 创建并配置一个消费者对象，用于处理从 replyQueueName 队列中接收到的响应消息"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" consumer "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"EventingBasicConsumer"),n("span",{class:"token punctuation"},"("),s("channel"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        consumer`),n("span",{class:"token punctuation"},"."),s("Received "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token punctuation"},"("),s("model"),n("span",{class:"token punctuation"},","),s(" ea"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// 从回调字典中查找与该消息相关联的任务源对象，并将响应消息传递给它。"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("callbackMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"TryRemove"),n("span",{class:"token punctuation"},"("),s("ea"),n("span",{class:"token punctuation"},"."),s("BasicProperties"),n("span",{class:"token punctuation"},"."),s("CorrelationId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"out"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" tcs"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" body "),n("span",{class:"token operator"},"="),s(" ea"),n("span",{class:"token punctuation"},"."),s("Body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(" Encoding"),n("span",{class:"token punctuation"},"."),s("UTF8"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetString"),n("span",{class:"token punctuation"},"("),s("body"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            tcs`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"TrySetResult"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
        channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicConsume"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"consumer"),n("span",{class:"token punctuation"},":"),s(" consumer"),n("span",{class:"token punctuation"},","),s(`
                                `),n("span",{class:"token named-parameter punctuation"},"queue"),n("span",{class:"token punctuation"},":"),s(" replyQueueName"),n("span",{class:"token punctuation"},","),s(`
                                `),n("span",{class:"token named-parameter punctuation"},"autoAck"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"[RPC 客户端] 已注册会掉队列"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"// 发起 RPC 请求的方法，返回一个任务源对象，可用于异步等待服务器端的响应消息。"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[s("Task"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"CallAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" message"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CancellationToken"),s(" cancellationToken "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"IBasicProperties"),s(" props "),n("span",{class:"token operator"},"="),s(" channel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateBasicProperties"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" correlationId "),n("span",{class:"token operator"},"="),s(" Guid"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"NewGuid"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        props`),n("span",{class:"token punctuation"},"."),s("CorrelationId "),n("span",{class:"token operator"},"="),s(" correlationId"),n("span",{class:"token punctuation"},";"),s(`
        props`),n("span",{class:"token punctuation"},"."),s("ReplyTo "),n("span",{class:"token operator"},"="),s(" replyQueueName"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" messageBytes "),n("span",{class:"token operator"},"="),s(" Encoding"),n("span",{class:"token punctuation"},"."),s("UTF8"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetBytes"),n("span",{class:"token punctuation"},"("),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 创建一个新的任务源对象，用于异步等待服务器端的响应消息。"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" tcs "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("TaskCompletionSource"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        callbackMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"TryAdd"),n("span",{class:"token punctuation"},"("),s("correlationId"),n("span",{class:"token punctuation"},","),s(" tcs"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 将请求消息发送到指定的队列上，并在请求消息的属性中添加用于标识该请求的 correlationId 和对应的回调队列名 replyQueueName。"),s(`
        channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicPublish"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"exchange"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"."),s("Empty"),n("span",{class:"token punctuation"},","),s(`
                                `),n("span",{class:"token named-parameter punctuation"},"routingKey"),n("span",{class:"token punctuation"},":"),s(" QUEUE_NAME"),n("span",{class:"token punctuation"},","),s(`
                                `),n("span",{class:"token named-parameter punctuation"},"basicProperties"),n("span",{class:"token punctuation"},":"),s(" props"),n("span",{class:"token punctuation"},","),s(`
                                `),n("span",{class:"token named-parameter punctuation"},"body"),n("span",{class:"token punctuation"},":"),s(" messageBytes"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC 客户端] 已向 RPC 服务端发出请求，请求ID：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"correlationId"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'."')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 如果在指定的时间内仍未收到服务器端的响应消息，则取消此次请求。"),s(`
        cancellationToken`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Register"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            callbackMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"TryRemove"),n("span",{class:"token punctuation"},"("),s("correlationId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"out"),s(" _"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" tcs"),n("span",{class:"token punctuation"},"."),s("Task"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"// 实现 IDisposable 接口，用于在使用完毕后释放资源。"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"Dispose"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        connection`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"Main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),s(" args"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"[RPC 客户端] 正在请求 RPC 服务端"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 创建 RpcClient 对象，并使用它发起 RPC 请求。"),s(`
    `),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"InvokeAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"30"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ReadLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 定义发起 RPC 请求的方法，其中包括了创建 RpcClient 对象、发起请求并处理响应的完整流程。"),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"InvokeAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" n"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" rpcClient "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"RpcClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" rpcClient"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CallAsync"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC 客户端] 请求完成，回调结果：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"response"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"相关信息"),n("p",null,[n("code",null,"ConcurrentDictionary"),n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote1"},"[1]"),n("a",{class:"footnote-anchor",id:"footnote-ref1"})])]),n("p",null,[n("code",null,"TaskCompletionSource"),n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote2"},"[2]"),n("a",{class:"footnote-anchor",id:"footnote-ref2"})])]),n("p",null,[n("code",null,"CancellationToken"),n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote3"},"[3]"),n("a",{class:"footnote-anchor",id:"footnote-ref3"})])])],-1),f=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token namespace"},[s("RabbitMQ"),n("span",{class:"token punctuation"},"."),s("Client")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token namespace"},[s("RabbitMQ"),n("span",{class:"token punctuation"},"."),s("Client"),n("span",{class:"token punctuation"},"."),s("Events")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token namespace"},[s("System"),n("span",{class:"token punctuation"},"."),s("Text")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 创建连接工厂对象，指定主机名和登录凭据信息"),s(`
`),n("span",{class:"token class-name"},"ConnectionFactory"),s(" factory "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    HostName `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"192.168.3.100"'),n("span",{class:"token punctuation"},","),s(`
    Port `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5672"),n("span",{class:"token punctuation"},","),s(`
    UserName `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"guest"'),n("span",{class:"token punctuation"},","),s(`
    Password `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"guest"'),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 使用连接工厂对象创建一个新的 RabbitMQ 连接和通道对象。"),s(`
`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" connection "),n("span",{class:"token operator"},"="),s(" factory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateConnection"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" channel "),n("span",{class:"token operator"},"="),s(" connection"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},'// 声明一个名为 "rpc_queue" 的队列，用于接收客户端发起的 RPC 请求消息。'),s(`
channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"QueueDeclare"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"queue"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"rpc_queue"'),n("span",{class:"token punctuation"},","),s(`
                     `),n("span",{class:"token named-parameter punctuation"},"durable"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(`
                     `),n("span",{class:"token named-parameter punctuation"},"exclusive"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(`
                     `),n("span",{class:"token named-parameter punctuation"},"autoDelete"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(`
                     `),n("span",{class:"token named-parameter punctuation"},"arguments"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 设置消费者对象的预取计数，即在当前消费者处理完之前，不会再从队列中取出新的消息。"),s(`
channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicQos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"prefetchSize"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token named-parameter punctuation"},"prefetchCount"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"global"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},'// 创建一个事件驱动的消费者对象，用于接收来自 "rpc_queue" 队列中的 RPC 请求消息。'),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" consumer "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"EventingBasicConsumer"),n("span",{class:"token punctuation"},"("),s("channel"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 定义消费者对象的 Received 事件处理函数，用于在收到客户端发送的 RPC 请求消息后生成响应消息并发送回客户端。"),s(`
consumer`),n("span",{class:"token punctuation"},"."),s("Received "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token punctuation"},"("),s("model"),n("span",{class:"token punctuation"},","),s(" ea"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" response "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"."),s("Empty"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 从消息体中读取请求数据、CorrelationId 和 ReplyTo 属性值。"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" body "),n("span",{class:"token operator"},"="),s(" ea"),n("span",{class:"token punctuation"},"."),s("Body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" props "),n("span",{class:"token operator"},"="),s(" ea"),n("span",{class:"token punctuation"},"."),s("BasicProperties"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" replyProps "),n("span",{class:"token operator"},"="),s(" channel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateBasicProperties"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    replyProps`),n("span",{class:"token punctuation"},"."),s("CorrelationId "),n("span",{class:"token operator"},"="),s(" props"),n("span",{class:"token punctuation"},"."),s("CorrelationId"),n("span",{class:"token punctuation"},";"),s(`

    Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC服务端] 收到 RPC 客户端请求，ID：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("replyProps"),n("span",{class:"token punctuation"},"."),s("CorrelationId")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"try"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 解析请求消息中的参数，并调用 Fibonacci 函数进行计算。"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" message "),n("span",{class:"token operator"},"="),s(" Encoding"),n("span",{class:"token punctuation"},"."),s("UTF8"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetString"),n("span",{class:"token punctuation"},"("),s("body"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"int")]),s(" n "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Parse"),n("span",{class:"token punctuation"},"("),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC服务端] 解析 RPC 客户端消息：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"message"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC服务端] 调用斐波那契函数：Fib('),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"message"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},')"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        response `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Fib"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" e"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 如果发生错误，则将异常信息作为响应消息返回给客户端。"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC服务端] 发生异常：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("e"),n("span",{class:"token punctuation"},"."),s("Message")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        response `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"."),s("Empty"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"finally"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 将响应消息发送回客户端，并确认已经处理完当前的请求消息。"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" responseBytes "),n("span",{class:"token operator"},"="),s(" Encoding"),n("span",{class:"token punctuation"},"."),s("UTF8"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetBytes"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicPublish"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"exchange"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"."),s("Empty"),n("span",{class:"token punctuation"},","),s(`
                             `),n("span",{class:"token named-parameter punctuation"},"routingKey"),n("span",{class:"token punctuation"},":"),s(" props"),n("span",{class:"token punctuation"},"."),s("ReplyTo"),n("span",{class:"token punctuation"},","),s(`
                             `),n("span",{class:"token named-parameter punctuation"},"basicProperties"),n("span",{class:"token punctuation"},":"),s(" replyProps"),n("span",{class:"token punctuation"},","),s(`
                             `),n("span",{class:"token named-parameter punctuation"},"body"),n("span",{class:"token punctuation"},":"),s(" responseBytes"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"//消息确认"),s(`
        channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicAck"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"deliveryTag"),n("span",{class:"token punctuation"},":"),s(" ea"),n("span",{class:"token punctuation"},"."),s("DeliveryTag"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token named-parameter punctuation"},"multiple"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"[RPC服务端] RPC 客户端消息处理完成"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

channel`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BasicConsume"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"queue"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"rpc_queue"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token named-parameter punctuation"},"autoAck"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token named-parameter punctuation"},"consumer"),n("span",{class:"token punctuation"},":"),s(" consumer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"[RPC服务端] 等待 RPC 请求中。。。"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ReadLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 下面是一个简单的斐波那契函数实现，用于计算 RPC 请求中传递的参数值。"),s(`
`),n("span",{class:"token comment"},"// 注意：该函数的实现采用了递归方式，可能会受到栈深度限制等问题的影响。"),s(`
`),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"int")]),s(),n("span",{class:"token function"},"Fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"int")]),s(" n"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token keyword"},"is"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"or"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"Fib"),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token function"},"Fib"),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=t('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p><strong>ConcurrentDictionary</strong> 是 .NET Framework 和 .NET Core 中的一个线程安全的哈希表实现，用于存储 key-value 对象。它支持并发读写操作，并且能够在多个线程同时访问时保证数据的一致性和完整性。与传统的 Dictionary 不同，ConcurrentDictionary 中的所有方法都是线程安全的，这意味着我们可以在多个线程中同时添加或删除元素，而不必担心数据冲突或竞争条件等问题。ConcurrentDictionary 提供了许多常见的哈希表操作，例如添加元素、删除元素、更新元素、枚举元素等。由于它是线程安全的，因此可以在高并发场景下使用，例如实现 RPC 系统中客户端和服务器通信过程中的请求-响应映射关系。 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p><strong>TaskCompletionSource</strong> 是一个用于创建和管理异步操作的工具类，它允许我们在任何时间手动设置执行结果并通知等待该任务完成的所有线程或任务。具体而言，它提供了以下几个主要的功能：</p><ol><li>创建一个新的 Task 对象并返回它；</li><li>通过 SetResult、SetException 或 SetCanceled 方法设置 Task 的状态，并将其标记为已完成；</li><li>允许异步等待 Task 完成，并等待 SetResult、SetException 或 SetCanceled 方法被调用并将 Task 标记为已完成。</li></ol><p>使用 TaskCompletionSource 可以更灵活地控制异步操作的状态和执行过程，例如在异步方法中使用 await 等待开启的任务的结果，或者在异步代码中手动创建任务来表示某些复杂的并发逻辑，从而简化异步程序的实现和维护。</p><p>在 RPC 系统中，TaskCompletionSource 常常用于实现客户端与服务器端之间的请求-响应映射关系，即为每个 RPC 请求创建一个唯一的 Task 实例，并在接收到相应的响应消息时，将响应结果传递给对应的 Task 对象，以便客户端程序获取到服务器端的处理结果。 <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p><strong>CancellationToken</strong> 是 .NET Framework 和 .NET Core 中的一个用于在多个线程之间协调取消操作的机制。它允许我们创建 CancellationToken 对象，并将其传递给异步或长时间运行的操作，以便在需要时随时取消该操作，避免不必要的资源浪费和性能下降。</p><p>CancellationToken 的主要特点包括：</p><ol><li>它是一个轻量级对象，可以在任何时候创建和传递；</li><li>它支持在异步方法中通过 CancellationTokn 取消异步任务的执行；</li><li>它支持在长时间运行的任务中周期性地检查 CancellationTokn 是否被取消，并及时停止任务的执行；</li><li>它支持取消多个操作，例如同时取消多个 HTTP 请求等。</li></ol><p>在 RPC 系统中，CancellationToken 常常用于控制客户端与服务器端之间的通信超时时间，从而避免客户端程序一直阻塞等待服务器端的响应消息而导致性能下降或资源浪费的问题。具体而言，在发起 RPC 请求时，客户端程序可以选择传入一个 CancellationToken 对象以便在需要时随时取消该请求。如果在指定的时间内（通过 CancellationToken 对象的 WithTimeout() 或者 Register() 方法设置）仍未收到服务器端的响应消息，则会自动取消该请求并执行注册的回调函数（即将相关的映射关系从 callbackMapper 字典中移除）。 <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li></ol></section>',2);function C(w,h){const e=i("Tabs");return u(),k("div",null,[b,r(e,{id:"24",data:[{title:"生产者"},{title:"消费者"}]},{tab0:a(({title:o,value:c,isActive:l})=>[v,y]),tab1:a(({title:o,value:c,isActive:l})=>[f]),_:1}),g])}const T=p(d,[["render",C],["__file","rpc-mode.html.vue"]]);export{T as default};
